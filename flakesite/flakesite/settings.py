"""
Generated by 'django-admin startproject' using Django 4.0.4.
"""

from pathlib import Path
from django.core.management.utils import get_random_secret_key
import json

try:
    with open('/etc/flake_config.json', 'r') as f:
        flake_config = json.load(f)
except FileNotFoundError:
    print("Unable to locate flake configuration file!")
flake_config = {}

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = flake_config.get('SECRET_KEY', get_random_secret_key())

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'polymorphic',
    'rest_framework',
    'rest_polymorphic',
    'storages',
    'rules',
    'accounts.apps.AccountsConfig',
    'flake_app.apps.FlakeAppConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_cleanup.apps.CleanupConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'flakesite.urls'

AUTHENTICATION_BACKENDS = (
    'rules.permissions.ObjectPermissionBackend',
    'django.contrib.auth.backends.ModelBackend',
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'flakesite.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': flake_config.get('DB_NAME', ''),
        'USER': flake_config.get('DB_USER', ''),
        'PASSWORD': flake_config.get('DB_PASSWORD', ''),
        'HOST': flake_config.get('DB_HOST', ''),
        'PORT': flake_config.get('DB_PORT', '')
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_ROOT = BASE_DIR / 'static'
STATIC_URL = 'static/'

MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = '/media/'

if flake_config.get('DRB_APP_KEY') or flake_config.get('DRB_REFRESH_TOKEN'):
    DEFAULT_FILE_STORAGE = 'flake_app.storage.SharedLinkDropBoxStorage'

    DROPBOX_APP_KEY = flake_config.get('DRB_APP_KEY', '')

    DROPBOX_APP_SECRET = flake_config.get('DRB_APP_SECRET', '')

    DROPBOX_OAUTH2_REFRESH_TOKEN = flake_config.get('DRB_REFRESH_TOKEN', '')

    DROPBOX_ROOT_PATH = '/'

    DROPBOX_WRITE_MODE = 'overwrite'
else:
    print("Dropbox not configured. Using default storage.")
    DEFAULT_FILE_STORAGE = 'django.core.files.storage.FileSystemStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'accounts.User'

# Login redirects
LOGIN_REDIRECT_URL = "/flake_app"
LOGOUT_REDIRECT_URL = "/flake_app"

FILE_UPLOAD_MAX_MEMORY_SIZE = 50 * 1024 * 1024